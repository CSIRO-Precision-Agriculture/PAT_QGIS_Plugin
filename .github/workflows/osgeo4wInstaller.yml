name: Windows Build of PAT QGis Plugin via OSGeo4W

on: push

env:
    PYPRECAG_BRANCH: master
    PYPRECAG_REPO: https://github.com/CSIRO-Precision-Agriculture/pyprecag.git
    PYTHON_QGIS: python-qgis-ltr
    QGIS_VER: qgis-ltr
    
jobs:
  build-windows:
    runs-on: windows-latest

    strategy:
      max-parallel: 5

    steps:
    - name: Output Run ID
      run: echo ${{ github.run_id }}
    - name: Output Run Number
      run: echo ${{ github.run_number }}
    - name: Output Run Attempt
      run: echo ${{ github.run_attempt }} 
    - name: Output Updated Date
      run: echo ${{ github.event.repository.updated_at }} 
    - name: Retrieve Timestamp of Last Update without the time component    
      shell: bash
      run: | 
        echo ${{  github.event.repository.updated_at }} | cut --delimiter=T -f 1 
        # Pipe the above command into a temp file DATE_STAMP.txt
        echo ${{  github.event.repository.updated_at }} | cut --delimiter=T -f 1 | xargs echo > DATE_STAMP.txt
        # Place the contents of this file into a temporay shell variable
        DATE=$(cat DATE_STAMP.txt)
        # Place this is into a GitHub enviromental variable (accesible via $${{ env.DATE_STAMP }}
        echo "DATE_STAMP=$DATE" >> $GITHUB_ENV
    - name: Retrieve Timestamp of Last Update Part 2
      run: | 
          echo "Date Stamp: ${{ env.DATE_STAMP }}"
          
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Setup OSGeo4W environment
      id: setup-osgeo4w
      uses: echoix/setup-OSGeo4W@v0.2.0
      with:
        # Using line folding replacing newlines by a space, and striping the final newlines
        # See https://yaml-multiline.info/
        packages: >-
          qgis-ltr-full 
          cairo-devel
          freetype-devel
          gdal-devel
          geos-devel
          python3-core
          python3-tools
          python3-rasterio
          python3-fiona
          qt5-tools
          libjpeg-turbo-devel
          liblas-devel
          libpng-devel
          libpq-devel
          libtiff-devel
          netcdf-devel

    - name: Check OSGeo4W directory has been installed
      run: |
        echo "Checking directories"
        dir
        dir C:\OSGeo4W
        dir C:\OSGeo4W\bin
        echo "Finished directory check."

    - name: Check osgeo commands
      run: |
          echo "Testing osgeo"
          C:\OSGeo4W\OSGeo4W.bat o-help
    
    - name: Check qgis-python
      run: |
          echo "Testing qgis-python"
          C:\OSGeo4W\OSGeo4W.bat python-qgis-ltr -m pip list

    - name: Checkout pyprecag from git repository"
      run: |
          echo "Checking out $PYPRECAG_BRANCH branch of pyprecag"
          git clone -b $PYPRECAG_BRANCH --single-branch --depth 1 $PYPRECAG_REPO

    - name: Install the checked out pyprecag via qgis-python
      run: |
          echo "Do a pip install of the checked out version of pyprecag"
          C:\OSGeo4W\OSGeo4W.bat python-$QGIS_VER -m pip install .\pyprecag
                  
    - name: Final check of qgis-python modules, i.e. does it contain pyprecag
      run: |
          echo "Testing qgis-python"
          C:\OSGeo4W\OSGeo4W.bat python-$QGIS_VER -m pip list

    - name: Experimental
      run: |
          echo "Installing pb_tool to qgis python"
          C:\OSGeo4W\OSGeo4W.bat python-$QGIS_VER -m pip install pb_tool
          echo "Test if we can access it"
          C:\OSGeo4W\OSGeo4W.bat pb_tool
       
          echo "Invoking the pbt_tool ops to perform compile, deploy and zip"
          cd pat
          echo "pb_tool compile"
          C:\OSGeo4W\OSGeo4W.bat pb_tool compile
          dir
          
    - name: Build and Package the PAT Qgis Plugin
      run: |
        echo "Installing the qt5-tools"
        pip install qt5-tools
        echo "Installing the pb_tool module to the main python installed"
        python --version
        pip install pb_tool
        pb_tool
        echo "Invoking the pbt_tool ops to perform compile, deploy and zip"
        cd pat
        echo "pb_tool compile"
        pb_tool compile
        echo "pb_tool deploy"
        mkdir tmp_deploy
        pb_tool deploy -p tmp_deploy -y
        echo "pb_tool zip"
        pb_tool zip
        echo "Check the pat directory"
        dir
        echo "Check the zip_build directory"
        dir zip_build

    - name: Executing Unit Tests similar to the Geocoding Nominatum Testing
      run: |
        dir .\pat\tests
        echo "Perform unit tests"
        #echo "Just try a single test"
        #C:\OSGeo4W\OSGeo4W.bat python-$QGIS_VER -m unittest .\pat\tests\test_cleanTrim.py
        #echo "Try all test_* tests"
        C:\OSGeo4W\OSGeo4W.bat python-$QGIS_VER -m unittest discover -s .\pat\tests -p test_*
        
    - name: Upload pat.zip file as artifact zip file with the time stamp of last update in its name
      uses: actions/upload-artifact@v4
      with:      
        name: PAT_QGIS_PLUGIN_$QGIS_VER_${{ env.DATE_STAMP }}
        path: .\pat\zip_build\pat.zip    
        

      
